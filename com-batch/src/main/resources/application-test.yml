spring:
  config:
    import: classpath:quartztest.yml

  java:
    options: "-Xms512m -Xmx2g"

  application:
    name: com-batch

  main:
    allow-bean-definition-overriding: true

  batch:
    jdbc:
      initialize-schema: never
      table-prefix: quartz.BATCH_
    job:
      enabled: false
      names: ${job.name:NONE}

  datasource:
    batch:
      url: jdbc:h2:mem:batch;DB_CLOSE_DELAY=-1;DATABASE_TO_UPPER=false
      username: sa
      password:
      driver-class-name: org.h2.Driver
      hikari:
        pool-name: Hikari
        connection-timeout: 30000
        minimum-idle: 1
        maximum-pool-size: 5
        idle-timeout: 600000
        max-lifetime: 1800000
        auto-commit: true
    quartz:
      url: jdbc:h2:mem:quartz;DB_CLOSE_DELAY=-1;DATABASE_TO_UPPER=false
      username: sa
      password:
      driver-class-name: org.h2.Driver
      hikari:
        pool-name: Hikari
        connection-timeout: 30000
        minimum-idle: 1
        maximum-pool-size: 5
        idle-timeout: 600000
        max-lifetime: 1800000
        auto-commit: true
  jpa:
    database-platform: org.hibernate.dialect.MariaDB103Dialect
    defer-datasource-initialization: true
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  sql:
    init:
      mode: always
      schema-locations:
        - classpath:init-db/schema/query.sql
        - classpath:init-db/schema/job_scheduler.sql
        - classpath:init-db/schema/common_export.sql
        - classpath:init-db/schema/query_batch.sql
      data-locations: classpath:init-db/data/menu.sql
  h2:
    console:
      enabled: true
      path: /h2-console
      settings.trace: false
      settings.web-allow-others: true

management:
  health:
    circuitbreakers:
      enabled: true
    livenessState:
      enabled: true
    readinessState:
      enabled: true
    db:
      enabled: false
  endpoints:
    web:
      exposure:
        include: "health"
      base-path: /actuator

logging:
  charset:
    console: UTF-8
    file: UTF-8
  file:
    name: ./logs/${spring.application.name}.log
    max-history: 30
    max-size: 100MB
    total-size-cap: 100GB
  pattern:
    console: "%d %-5level %logger : %msg%n"
    file: "%d %-5level %logger : %msg%n"
  logback:
    rollingpolicy:
      file-name-pattern: ${LOG_FILE}.%d{yyyy-MM-dd}.%i
  level:
    root: INFO
    web: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    com.adtcaps.nextoss: DEBUG

mybatis:
  mapper-locations: classpath:mappers/**/*.xml
  config-location: classpath:mybatis-config.xml

kafka:
  topic:
    API-TRACE-LOG: ONM-T-LOG-API
    API-TRACE-LOG-ERR: ONM-T-LOG-API-ERR
  group-id:
    API-TRACE-LOG: onm-g-log-api
  concurrency:
    API-TRACE-LOG: 3

  data:
    redis:
      database: 0
      host: localhost
      port: 6379
      password: "changeme"
      timeout: 30000
      lettuce:
        pool:
          maxTotal: 8
          maxWaitMillis: 10000
          maxIdle: 8
          minIdle: 0

  kafka:
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    listener:
      ack-mode: MANUAL_IMMEDIATE
      type: BATCH
    consumer:
      bootstrap-servers: localhost:9092
      auto-offset-reset: latest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      enable-auto-commit: false
      max-poll-records: 50
      fetch-min-size: 15360
      fetch-max-wait: 2000


server:
  port: 8080
