version: '3.8'
services:
  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper-work-batch
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka-work-batch
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INSIDE://:9093, OUTSIDE://:9092
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093, OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT, OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPIC: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "9092:9092"
      - "9093:9093"

#  kafka-ui:
#    image: provectuslabs/kafka-ui
#    container_name: kafka-ui-work-batch
#    environment:
#      KAFKA_CLUSTERS_0_NAME: local
#      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9093
#    ports:
#      - "8080:8080"

#  redis:
#    image: redis:6.2.6
#    container_name: redis-work-batch
#    ports:
#      - "6379:6379"
#    command: redis-server --requirepass changeme --port 6379

  mysql:
    # build: ./mysql
    image: mysql:8.0.32
    container_name: mysql-work-batch
    ports:
      - "3307:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=qwer1234
    volumes:
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
      - mysql:/var/lib/mysql

volumes:
  mysql:
    driver: local